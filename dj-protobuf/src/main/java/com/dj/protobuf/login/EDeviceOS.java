// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Login.proto

package com.dj.protobuf.login;

/**
 * <pre>
 *&#47; &lt;summary&gt;
 * / 操作系统类别
 * / &lt;/summary&gt;
 * </pre>
 *
 * Protobuf enum {@code Protocols.EDeviceOS}
 */
public enum EDeviceOS
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>NoneOS = 0;</code>
   */
  NoneOS(0),
  /**
   * <code>PC = 1;</code>
   */
  PC(1),
  /**
   * <code>MAC = 2;</code>
   */
  MAC(2),
  /**
   * <code>Android = 3;</code>
   */
  Android(3),
  /**
   * <code>IOS = 4;</code>
   */
  IOS(4),
  /**
   * <code>WP = 5;</code>
   */
  WP(5),
  ;

  /**
   * <code>NoneOS = 0;</code>
   */
  public static final int NoneOS_VALUE = 0;
  /**
   * <code>PC = 1;</code>
   */
  public static final int PC_VALUE = 1;
  /**
   * <code>MAC = 2;</code>
   */
  public static final int MAC_VALUE = 2;
  /**
   * <code>Android = 3;</code>
   */
  public static final int Android_VALUE = 3;
  /**
   * <code>IOS = 4;</code>
   */
  public static final int IOS_VALUE = 4;
  /**
   * <code>WP = 5;</code>
   */
  public static final int WP_VALUE = 5;


  public final int getNumber() {
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EDeviceOS valueOf(int value) {
    return forNumber(value);
  }

  public static EDeviceOS forNumber(int value) {
    switch (value) {
      case 0: return NoneOS;
      case 1: return PC;
      case 2: return MAC;
      case 3: return Android;
      case 4: return IOS;
      case 5: return WP;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EDeviceOS>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EDeviceOS> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EDeviceOS>() {
          public EDeviceOS findValueByNumber(int number) {
            return EDeviceOS.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.dj.protobuf.login.Login.getDescriptor()
        .getEnumTypes().get(0);
  }

  private static final EDeviceOS[] VALUES = values();

  public static EDeviceOS valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EDeviceOS(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Protocols.EDeviceOS)
}

