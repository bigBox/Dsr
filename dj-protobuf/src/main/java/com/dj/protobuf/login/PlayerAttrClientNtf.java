// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Login.proto

package com.dj.protobuf.login;

/**
 * <pre>
 *&#47; &lt;summary&gt;
 * / Level			等级
 * / Experience			经验
 * / Gold			金币
 * / Stamina			体力
 * / Diamond			钻石
 * / Reputation			声望
 * / ReputationLevel		声望等级
 * / ShowTable			馆藏
 * / ShowTableLevel		馆藏等级
 * / Ecology			生态值
 * / Boom			繁荣度
 * / GuildScore			商会积分
 * / Achievement			当前成就等级进度
 * / AchievementLevel		当前成就等级
 * / &lt;/summary&gt;
 * </pre>
 *
 * Protobuf type {@code Protocols.PlayerAttrClientNtf}
 */
public  final class PlayerAttrClientNtf extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Protocols.PlayerAttrClientNtf)
    PlayerAttrClientNtfOrBuilder {
  // Use PlayerAttrClientNtf.newBuilder() to construct.
  private PlayerAttrClientNtf(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PlayerAttrClientNtf() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PlayerAttrClientNtf(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              longDic_ = com.google.protobuf.MapField.newMapField(
                  LongDicDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
            longDic = input.readMessage(
                LongDicDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            longDic_.getMutableMap().put(longDic.getKey(), longDic.getValue());
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              intDic_ = com.google.protobuf.MapField.newMapField(
                  IntDicDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
            intDic = input.readMessage(
                IntDicDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            intDic_.getMutableMap().put(intDic.getKey(), intDic.getValue());
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              strDic_ = com.google.protobuf.MapField.newMapField(
                  StrDicDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000004;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            strDic = input.readMessage(
                StrDicDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            strDic_.getMutableMap().put(strDic.getKey(), strDic.getValue());
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              byteDic_ = com.google.protobuf.MapField.newMapField(
                  ByteDicDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000008;
            }
            com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
            byteDic = input.readMessage(
                ByteDicDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            byteDic_.getMutableMap().put(byteDic.getKey(), byteDic.getValue());
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              uintDic_ = com.google.protobuf.MapField.newMapField(
                  UintDicDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000010;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
            uintDic = input.readMessage(
                UintDicDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            uintDic_.getMutableMap().put(uintDic.getKey(), uintDic.getValue());
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              uint64Dic_ = com.google.protobuf.MapField.newMapField(
                  Uint64DicDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000020;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
            uint64Dic = input.readMessage(
                Uint64DicDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            uint64Dic_.getMutableMap().put(uint64Dic.getKey(), uint64Dic.getValue());
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              doubleDic_ = com.google.protobuf.MapField.newMapField(
                  DoubleDicDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000040;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
            doubleDic = input.readMessage(
                DoubleDicDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            doubleDic_.getMutableMap().put(doubleDic.getKey(), doubleDic.getValue());
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.dj.protobuf.login.Login.internal_static_Protocols_PlayerAttrClientNtf_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 1:
        return internalGetLongDic();
      case 2:
        return internalGetIntDic();
      case 3:
        return internalGetStrDic();
      case 4:
        return internalGetByteDic();
      case 5:
        return internalGetUintDic();
      case 6:
        return internalGetUint64Dic();
      case 7:
        return internalGetDoubleDic();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.dj.protobuf.login.Login.internal_static_Protocols_PlayerAttrClientNtf_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.dj.protobuf.login.PlayerAttrClientNtf.class, com.dj.protobuf.login.PlayerAttrClientNtf.Builder.class);
  }

  public static final int LONGDIC_FIELD_NUMBER = 1;
  private static final class LongDicDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Long> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Long>newDefaultInstance(
                com.dj.protobuf.login.Login.internal_static_Protocols_PlayerAttrClientNtf_LongDicEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.INT64,
                0L);
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Long> longDic_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
  internalGetLongDic() {
    if (longDic_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          LongDicDefaultEntryHolder.defaultEntry);
    }
    return longDic_;
  }

  public int getLongDicCount() {
    return internalGetLongDic().getMap().size();
  }
  /**
   * <code>map&lt;string, int64&gt; longDic = 1;</code>
   */

  public boolean containsLongDic(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetLongDic().getMap().containsKey(key);
  }
  /**
   * Use {@link #getLongDicMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Long> getLongDic() {
    return getLongDicMap();
  }
  /**
   * <code>map&lt;string, int64&gt; longDic = 1;</code>
   */

  public java.util.Map<java.lang.String, java.lang.Long> getLongDicMap() {
    return internalGetLongDic().getMap();
  }
  /**
   * <code>map&lt;string, int64&gt; longDic = 1;</code>
   */

  public long getLongDicOrDefault(
      java.lang.String key,
      long defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Long> map =
        internalGetLongDic().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, int64&gt; longDic = 1;</code>
   */

  public long getLongDicOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Long> map =
        internalGetLongDic().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int INTDIC_FIELD_NUMBER = 2;
  private static final class IntDicDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Long> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Long>newDefaultInstance(
                com.dj.protobuf.login.Login.internal_static_Protocols_PlayerAttrClientNtf_IntDicEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.INT64,
                0L);
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Long> intDic_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
  internalGetIntDic() {
    if (intDic_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          IntDicDefaultEntryHolder.defaultEntry);
    }
    return intDic_;
  }

  public int getIntDicCount() {
    return internalGetIntDic().getMap().size();
  }
  /**
   * <code>map&lt;string, int64&gt; intDic = 2;</code>
   */

  public boolean containsIntDic(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetIntDic().getMap().containsKey(key);
  }
  /**
   * Use {@link #getIntDicMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Long> getIntDic() {
    return getIntDicMap();
  }
  /**
   * <code>map&lt;string, int64&gt; intDic = 2;</code>
   */

  public java.util.Map<java.lang.String, java.lang.Long> getIntDicMap() {
    return internalGetIntDic().getMap();
  }
  /**
   * <code>map&lt;string, int64&gt; intDic = 2;</code>
   */

  public long getIntDicOrDefault(
      java.lang.String key,
      long defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Long> map =
        internalGetIntDic().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, int64&gt; intDic = 2;</code>
   */

  public long getIntDicOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Long> map =
        internalGetIntDic().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int STRDIC_FIELD_NUMBER = 3;
  private static final class StrDicDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.dj.protobuf.login.Login.internal_static_Protocols_PlayerAttrClientNtf_StrDicEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> strDic_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetStrDic() {
    if (strDic_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          StrDicDefaultEntryHolder.defaultEntry);
    }
    return strDic_;
  }

  public int getStrDicCount() {
    return internalGetStrDic().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; strDic = 3;</code>
   */

  public boolean containsStrDic(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetStrDic().getMap().containsKey(key);
  }
  /**
   * Use {@link #getStrDicMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getStrDic() {
    return getStrDicMap();
  }
  /**
   * <code>map&lt;string, string&gt; strDic = 3;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getStrDicMap() {
    return internalGetStrDic().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; strDic = 3;</code>
   */

  public java.lang.String getStrDicOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetStrDic().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; strDic = 3;</code>
   */

  public java.lang.String getStrDicOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetStrDic().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int BYTEDIC_FIELD_NUMBER = 4;
  private static final class ByteDicDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.google.protobuf.ByteString> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                com.dj.protobuf.login.Login.internal_static_Protocols_PlayerAttrClientNtf_ByteDicEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.BYTES,
                com.google.protobuf.ByteString.EMPTY);
  }
  private com.google.protobuf.MapField<
      java.lang.String, com.google.protobuf.ByteString> byteDic_;
  private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
  internalGetByteDic() {
    if (byteDic_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ByteDicDefaultEntryHolder.defaultEntry);
    }
    return byteDic_;
  }

  public int getByteDicCount() {
    return internalGetByteDic().getMap().size();
  }
  /**
   * <code>map&lt;string, bytes&gt; byteDic = 4;</code>
   */

  public boolean containsByteDic(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetByteDic().getMap().containsKey(key);
  }
  /**
   * Use {@link #getByteDicMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getByteDic() {
    return getByteDicMap();
  }
  /**
   * <code>map&lt;string, bytes&gt; byteDic = 4;</code>
   */

  public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getByteDicMap() {
    return internalGetByteDic().getMap();
  }
  /**
   * <code>map&lt;string, bytes&gt; byteDic = 4;</code>
   */

  public com.google.protobuf.ByteString getByteDicOrDefault(
      java.lang.String key,
      com.google.protobuf.ByteString defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
        internalGetByteDic().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, bytes&gt; byteDic = 4;</code>
   */

  public com.google.protobuf.ByteString getByteDicOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
        internalGetByteDic().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int UINTDIC_FIELD_NUMBER = 5;
  private static final class UintDicDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Integer>newDefaultInstance(
                com.dj.protobuf.login.Login.internal_static_Protocols_PlayerAttrClientNtf_UintDicEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0);
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Integer> uintDic_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
  internalGetUintDic() {
    if (uintDic_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          UintDicDefaultEntryHolder.defaultEntry);
    }
    return uintDic_;
  }

  public int getUintDicCount() {
    return internalGetUintDic().getMap().size();
  }
  /**
   * <code>map&lt;string, uint32&gt; uintDic = 5;</code>
   */

  public boolean containsUintDic(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetUintDic().getMap().containsKey(key);
  }
  /**
   * Use {@link #getUintDicMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Integer> getUintDic() {
    return getUintDicMap();
  }
  /**
   * <code>map&lt;string, uint32&gt; uintDic = 5;</code>
   */

  public java.util.Map<java.lang.String, java.lang.Integer> getUintDicMap() {
    return internalGetUintDic().getMap();
  }
  /**
   * <code>map&lt;string, uint32&gt; uintDic = 5;</code>
   */

  public int getUintDicOrDefault(
      java.lang.String key,
      int defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetUintDic().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, uint32&gt; uintDic = 5;</code>
   */

  public int getUintDicOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Integer> map =
        internalGetUintDic().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int UINT64DIC_FIELD_NUMBER = 6;
  private static final class Uint64DicDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Long> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Long>newDefaultInstance(
                com.dj.protobuf.login.Login.internal_static_Protocols_PlayerAttrClientNtf_Uint64DicEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.UINT64,
                0L);
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Long> uint64Dic_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
  internalGetUint64Dic() {
    if (uint64Dic_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          Uint64DicDefaultEntryHolder.defaultEntry);
    }
    return uint64Dic_;
  }

  public int getUint64DicCount() {
    return internalGetUint64Dic().getMap().size();
  }
  /**
   * <code>map&lt;string, uint64&gt; uint64Dic = 6;</code>
   */

  public boolean containsUint64Dic(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetUint64Dic().getMap().containsKey(key);
  }
  /**
   * Use {@link #getUint64DicMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Long> getUint64Dic() {
    return getUint64DicMap();
  }
  /**
   * <code>map&lt;string, uint64&gt; uint64Dic = 6;</code>
   */

  public java.util.Map<java.lang.String, java.lang.Long> getUint64DicMap() {
    return internalGetUint64Dic().getMap();
  }
  /**
   * <code>map&lt;string, uint64&gt; uint64Dic = 6;</code>
   */

  public long getUint64DicOrDefault(
      java.lang.String key,
      long defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Long> map =
        internalGetUint64Dic().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, uint64&gt; uint64Dic = 6;</code>
   */

  public long getUint64DicOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Long> map =
        internalGetUint64Dic().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int DOUBLEDIC_FIELD_NUMBER = 7;
  private static final class DoubleDicDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.Double> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.Double>newDefaultInstance(
                com.dj.protobuf.login.Login.internal_static_Protocols_PlayerAttrClientNtf_DoubleDicEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.DOUBLE,
                0D);
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.Double> doubleDic_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
  internalGetDoubleDic() {
    if (doubleDic_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          DoubleDicDefaultEntryHolder.defaultEntry);
    }
    return doubleDic_;
  }

  public int getDoubleDicCount() {
    return internalGetDoubleDic().getMap().size();
  }
  /**
   * <code>map&lt;string, double&gt; doubleDic = 7;</code>
   */

  public boolean containsDoubleDic(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetDoubleDic().getMap().containsKey(key);
  }
  /**
   * Use {@link #getDoubleDicMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.Double> getDoubleDic() {
    return getDoubleDicMap();
  }
  /**
   * <code>map&lt;string, double&gt; doubleDic = 7;</code>
   */

  public java.util.Map<java.lang.String, java.lang.Double> getDoubleDicMap() {
    return internalGetDoubleDic().getMap();
  }
  /**
   * <code>map&lt;string, double&gt; doubleDic = 7;</code>
   */

  public double getDoubleDicOrDefault(
      java.lang.String key,
      double defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Double> map =
        internalGetDoubleDic().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, double&gt; doubleDic = 7;</code>
   */

  public double getDoubleDicOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.Double> map =
        internalGetDoubleDic().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry
         : internalGetLongDic().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
      longDic = LongDicDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      output.writeMessage(1, longDic);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry
         : internalGetIntDic().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
      intDic = IntDicDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      output.writeMessage(2, intDic);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetStrDic().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      strDic = StrDicDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      output.writeMessage(3, strDic);
    }
    for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
         : internalGetByteDic().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
      byteDic = ByteDicDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      output.writeMessage(4, byteDic);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
         : internalGetUintDic().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
      uintDic = UintDicDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      output.writeMessage(5, uintDic);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry
         : internalGetUint64Dic().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
      uint64Dic = Uint64DicDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      output.writeMessage(6, uint64Dic);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
         : internalGetDoubleDic().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
      doubleDic = DoubleDicDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      output.writeMessage(7, doubleDic);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry
         : internalGetLongDic().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
      longDic = LongDicDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, longDic);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry
         : internalGetIntDic().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
      intDic = IntDicDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, intDic);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetStrDic().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      strDic = StrDicDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, strDic);
    }
    for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
         : internalGetByteDic().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
      byteDic = ByteDicDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, byteDic);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
         : internalGetUintDic().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
      uintDic = UintDicDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, uintDic);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Long> entry
         : internalGetUint64Dic().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Long>
      uint64Dic = Uint64DicDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, uint64Dic);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
         : internalGetDoubleDic().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
      doubleDic = DoubleDicDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, doubleDic);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.dj.protobuf.login.PlayerAttrClientNtf)) {
      return super.equals(obj);
    }
    com.dj.protobuf.login.PlayerAttrClientNtf other = (com.dj.protobuf.login.PlayerAttrClientNtf) obj;

    boolean result = true;
    result = result && internalGetLongDic().equals(
        other.internalGetLongDic());
    result = result && internalGetIntDic().equals(
        other.internalGetIntDic());
    result = result && internalGetStrDic().equals(
        other.internalGetStrDic());
    result = result && internalGetByteDic().equals(
        other.internalGetByteDic());
    result = result && internalGetUintDic().equals(
        other.internalGetUintDic());
    result = result && internalGetUint64Dic().equals(
        other.internalGetUint64Dic());
    result = result && internalGetDoubleDic().equals(
        other.internalGetDoubleDic());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (!internalGetLongDic().getMap().isEmpty()) {
      hash = (37 * hash) + LONGDIC_FIELD_NUMBER;
      hash = (53 * hash) + internalGetLongDic().hashCode();
    }
    if (!internalGetIntDic().getMap().isEmpty()) {
      hash = (37 * hash) + INTDIC_FIELD_NUMBER;
      hash = (53 * hash) + internalGetIntDic().hashCode();
    }
    if (!internalGetStrDic().getMap().isEmpty()) {
      hash = (37 * hash) + STRDIC_FIELD_NUMBER;
      hash = (53 * hash) + internalGetStrDic().hashCode();
    }
    if (!internalGetByteDic().getMap().isEmpty()) {
      hash = (37 * hash) + BYTEDIC_FIELD_NUMBER;
      hash = (53 * hash) + internalGetByteDic().hashCode();
    }
    if (!internalGetUintDic().getMap().isEmpty()) {
      hash = (37 * hash) + UINTDIC_FIELD_NUMBER;
      hash = (53 * hash) + internalGetUintDic().hashCode();
    }
    if (!internalGetUint64Dic().getMap().isEmpty()) {
      hash = (37 * hash) + UINT64DIC_FIELD_NUMBER;
      hash = (53 * hash) + internalGetUint64Dic().hashCode();
    }
    if (!internalGetDoubleDic().getMap().isEmpty()) {
      hash = (37 * hash) + DOUBLEDIC_FIELD_NUMBER;
      hash = (53 * hash) + internalGetDoubleDic().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.dj.protobuf.login.PlayerAttrClientNtf parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dj.protobuf.login.PlayerAttrClientNtf parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dj.protobuf.login.PlayerAttrClientNtf parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dj.protobuf.login.PlayerAttrClientNtf parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dj.protobuf.login.PlayerAttrClientNtf parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dj.protobuf.login.PlayerAttrClientNtf parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dj.protobuf.login.PlayerAttrClientNtf parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.dj.protobuf.login.PlayerAttrClientNtf parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dj.protobuf.login.PlayerAttrClientNtf parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dj.protobuf.login.PlayerAttrClientNtf parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.dj.protobuf.login.PlayerAttrClientNtf prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *&#47; &lt;summary&gt;
   * / Level			等级
   * / Experience			经验
   * / Gold			金币
   * / Stamina			体力
   * / Diamond			钻石
   * / Reputation			声望
   * / ReputationLevel		声望等级
   * / ShowTable			馆藏
   * / ShowTableLevel		馆藏等级
   * / Ecology			生态值
   * / Boom			繁荣度
   * / GuildScore			商会积分
   * / Achievement			当前成就等级进度
   * / AchievementLevel		当前成就等级
   * / &lt;/summary&gt;
   * </pre>
   *
   * Protobuf type {@code Protocols.PlayerAttrClientNtf}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Protocols.PlayerAttrClientNtf)
      com.dj.protobuf.login.PlayerAttrClientNtfOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dj.protobuf.login.Login.internal_static_Protocols_PlayerAttrClientNtf_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetLongDic();
        case 2:
          return internalGetIntDic();
        case 3:
          return internalGetStrDic();
        case 4:
          return internalGetByteDic();
        case 5:
          return internalGetUintDic();
        case 6:
          return internalGetUint64Dic();
        case 7:
          return internalGetDoubleDic();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableLongDic();
        case 2:
          return internalGetMutableIntDic();
        case 3:
          return internalGetMutableStrDic();
        case 4:
          return internalGetMutableByteDic();
        case 5:
          return internalGetMutableUintDic();
        case 6:
          return internalGetMutableUint64Dic();
        case 7:
          return internalGetMutableDoubleDic();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dj.protobuf.login.Login.internal_static_Protocols_PlayerAttrClientNtf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dj.protobuf.login.PlayerAttrClientNtf.class, com.dj.protobuf.login.PlayerAttrClientNtf.Builder.class);
    }

    // Construct using com.dj.protobuf.login.PlayerAttrClientNtf.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      internalGetMutableLongDic().clear();
      internalGetMutableIntDic().clear();
      internalGetMutableStrDic().clear();
      internalGetMutableByteDic().clear();
      internalGetMutableUintDic().clear();
      internalGetMutableUint64Dic().clear();
      internalGetMutableDoubleDic().clear();
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.dj.protobuf.login.Login.internal_static_Protocols_PlayerAttrClientNtf_descriptor;
    }

    public com.dj.protobuf.login.PlayerAttrClientNtf getDefaultInstanceForType() {
      return com.dj.protobuf.login.PlayerAttrClientNtf.getDefaultInstance();
    }

    public com.dj.protobuf.login.PlayerAttrClientNtf build() {
      com.dj.protobuf.login.PlayerAttrClientNtf result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.dj.protobuf.login.PlayerAttrClientNtf buildPartial() {
      com.dj.protobuf.login.PlayerAttrClientNtf result = new com.dj.protobuf.login.PlayerAttrClientNtf(this);
      int from_bitField0_ = bitField0_;
      result.longDic_ = internalGetLongDic();
      result.longDic_.makeImmutable();
      result.intDic_ = internalGetIntDic();
      result.intDic_.makeImmutable();
      result.strDic_ = internalGetStrDic();
      result.strDic_.makeImmutable();
      result.byteDic_ = internalGetByteDic();
      result.byteDic_.makeImmutable();
      result.uintDic_ = internalGetUintDic();
      result.uintDic_.makeImmutable();
      result.uint64Dic_ = internalGetUint64Dic();
      result.uint64Dic_.makeImmutable();
      result.doubleDic_ = internalGetDoubleDic();
      result.doubleDic_.makeImmutable();
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.dj.protobuf.login.PlayerAttrClientNtf) {
        return mergeFrom((com.dj.protobuf.login.PlayerAttrClientNtf)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.dj.protobuf.login.PlayerAttrClientNtf other) {
      if (other == com.dj.protobuf.login.PlayerAttrClientNtf.getDefaultInstance()) return this;
      internalGetMutableLongDic().mergeFrom(
          other.internalGetLongDic());
      internalGetMutableIntDic().mergeFrom(
          other.internalGetIntDic());
      internalGetMutableStrDic().mergeFrom(
          other.internalGetStrDic());
      internalGetMutableByteDic().mergeFrom(
          other.internalGetByteDic());
      internalGetMutableUintDic().mergeFrom(
          other.internalGetUintDic());
      internalGetMutableUint64Dic().mergeFrom(
          other.internalGetUint64Dic());
      internalGetMutableDoubleDic().mergeFrom(
          other.internalGetDoubleDic());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.dj.protobuf.login.PlayerAttrClientNtf parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.dj.protobuf.login.PlayerAttrClientNtf) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Long> longDic_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
    internalGetLongDic() {
      if (longDic_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LongDicDefaultEntryHolder.defaultEntry);
      }
      return longDic_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
    internalGetMutableLongDic() {
      onChanged();;
      if (longDic_ == null) {
        longDic_ = com.google.protobuf.MapField.newMapField(
            LongDicDefaultEntryHolder.defaultEntry);
      }
      if (!longDic_.isMutable()) {
        longDic_ = longDic_.copy();
      }
      return longDic_;
    }

    public int getLongDicCount() {
      return internalGetLongDic().getMap().size();
    }
    /**
     * <code>map&lt;string, int64&gt; longDic = 1;</code>
     */

    public boolean containsLongDic(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLongDic().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLongDicMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Long> getLongDic() {
      return getLongDicMap();
    }
    /**
     * <code>map&lt;string, int64&gt; longDic = 1;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Long> getLongDicMap() {
      return internalGetLongDic().getMap();
    }
    /**
     * <code>map&lt;string, int64&gt; longDic = 1;</code>
     */

    public long getLongDicOrDefault(
        java.lang.String key,
        long defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Long> map =
          internalGetLongDic().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int64&gt; longDic = 1;</code>
     */

    public long getLongDicOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Long> map =
          internalGetLongDic().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearLongDic() {
      getMutableLongDic().clear();
      return this;
    }
    /**
     * <code>map&lt;string, int64&gt; longDic = 1;</code>
     */

    public Builder removeLongDic(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      getMutableLongDic().remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Long>
    getMutableLongDic() {
      return internalGetMutableLongDic().getMutableMap();
    }
    /**
     * <code>map&lt;string, int64&gt; longDic = 1;</code>
     */
    public Builder putLongDic(
        java.lang.String key,
        long value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      
      getMutableLongDic().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, int64&gt; longDic = 1;</code>
     */

    public Builder putAllLongDic(
        java.util.Map<java.lang.String, java.lang.Long> values) {
      getMutableLongDic().putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Long> intDic_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
    internalGetIntDic() {
      if (intDic_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            IntDicDefaultEntryHolder.defaultEntry);
      }
      return intDic_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
    internalGetMutableIntDic() {
      onChanged();;
      if (intDic_ == null) {
        intDic_ = com.google.protobuf.MapField.newMapField(
            IntDicDefaultEntryHolder.defaultEntry);
      }
      if (!intDic_.isMutable()) {
        intDic_ = intDic_.copy();
      }
      return intDic_;
    }

    public int getIntDicCount() {
      return internalGetIntDic().getMap().size();
    }
    /**
     * <code>map&lt;string, int64&gt; intDic = 2;</code>
     */

    public boolean containsIntDic(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetIntDic().getMap().containsKey(key);
    }
    /**
     * Use {@link #getIntDicMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Long> getIntDic() {
      return getIntDicMap();
    }
    /**
     * <code>map&lt;string, int64&gt; intDic = 2;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Long> getIntDicMap() {
      return internalGetIntDic().getMap();
    }
    /**
     * <code>map&lt;string, int64&gt; intDic = 2;</code>
     */

    public long getIntDicOrDefault(
        java.lang.String key,
        long defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Long> map =
          internalGetIntDic().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int64&gt; intDic = 2;</code>
     */

    public long getIntDicOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Long> map =
          internalGetIntDic().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearIntDic() {
      getMutableIntDic().clear();
      return this;
    }
    /**
     * <code>map&lt;string, int64&gt; intDic = 2;</code>
     */

    public Builder removeIntDic(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      getMutableIntDic().remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Long>
    getMutableIntDic() {
      return internalGetMutableIntDic().getMutableMap();
    }
    /**
     * <code>map&lt;string, int64&gt; intDic = 2;</code>
     */
    public Builder putIntDic(
        java.lang.String key,
        long value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      
      getMutableIntDic().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, int64&gt; intDic = 2;</code>
     */

    public Builder putAllIntDic(
        java.util.Map<java.lang.String, java.lang.Long> values) {
      getMutableIntDic().putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> strDic_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetStrDic() {
      if (strDic_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StrDicDefaultEntryHolder.defaultEntry);
      }
      return strDic_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableStrDic() {
      onChanged();;
      if (strDic_ == null) {
        strDic_ = com.google.protobuf.MapField.newMapField(
            StrDicDefaultEntryHolder.defaultEntry);
      }
      if (!strDic_.isMutable()) {
        strDic_ = strDic_.copy();
      }
      return strDic_;
    }

    public int getStrDicCount() {
      return internalGetStrDic().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; strDic = 3;</code>
     */

    public boolean containsStrDic(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetStrDic().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStrDicMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getStrDic() {
      return getStrDicMap();
    }
    /**
     * <code>map&lt;string, string&gt; strDic = 3;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getStrDicMap() {
      return internalGetStrDic().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; strDic = 3;</code>
     */

    public java.lang.String getStrDicOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStrDic().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; strDic = 3;</code>
     */

    public java.lang.String getStrDicOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetStrDic().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearStrDic() {
      getMutableStrDic().clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; strDic = 3;</code>
     */

    public Builder removeStrDic(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      getMutableStrDic().remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableStrDic() {
      return internalGetMutableStrDic().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; strDic = 3;</code>
     */
    public Builder putStrDic(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      getMutableStrDic().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; strDic = 3;</code>
     */

    public Builder putAllStrDic(
        java.util.Map<java.lang.String, java.lang.String> values) {
      getMutableStrDic().putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> byteDic_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetByteDic() {
      if (byteDic_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ByteDicDefaultEntryHolder.defaultEntry);
      }
      return byteDic_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetMutableByteDic() {
      onChanged();;
      if (byteDic_ == null) {
        byteDic_ = com.google.protobuf.MapField.newMapField(
            ByteDicDefaultEntryHolder.defaultEntry);
      }
      if (!byteDic_.isMutable()) {
        byteDic_ = byteDic_.copy();
      }
      return byteDic_;
    }

    public int getByteDicCount() {
      return internalGetByteDic().getMap().size();
    }
    /**
     * <code>map&lt;string, bytes&gt; byteDic = 4;</code>
     */

    public boolean containsByteDic(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetByteDic().getMap().containsKey(key);
    }
    /**
     * Use {@link #getByteDicMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getByteDic() {
      return getByteDicMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; byteDic = 4;</code>
     */

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getByteDicMap() {
      return internalGetByteDic().getMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; byteDic = 4;</code>
     */

    public com.google.protobuf.ByteString getByteDicOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetByteDic().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, bytes&gt; byteDic = 4;</code>
     */

    public com.google.protobuf.ByteString getByteDicOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetByteDic().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearByteDic() {
      getMutableByteDic().clear();
      return this;
    }
    /**
     * <code>map&lt;string, bytes&gt; byteDic = 4;</code>
     */

    public Builder removeByteDic(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      getMutableByteDic().remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getMutableByteDic() {
      return internalGetMutableByteDic().getMutableMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; byteDic = 4;</code>
     */
    public Builder putByteDic(
        java.lang.String key,
        com.google.protobuf.ByteString value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      getMutableByteDic().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, bytes&gt; byteDic = 4;</code>
     */

    public Builder putAllByteDic(
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
      getMutableByteDic().putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> uintDic_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetUintDic() {
      if (uintDic_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            UintDicDefaultEntryHolder.defaultEntry);
      }
      return uintDic_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetMutableUintDic() {
      onChanged();;
      if (uintDic_ == null) {
        uintDic_ = com.google.protobuf.MapField.newMapField(
            UintDicDefaultEntryHolder.defaultEntry);
      }
      if (!uintDic_.isMutable()) {
        uintDic_ = uintDic_.copy();
      }
      return uintDic_;
    }

    public int getUintDicCount() {
      return internalGetUintDic().getMap().size();
    }
    /**
     * <code>map&lt;string, uint32&gt; uintDic = 5;</code>
     */

    public boolean containsUintDic(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetUintDic().getMap().containsKey(key);
    }
    /**
     * Use {@link #getUintDicMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getUintDic() {
      return getUintDicMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; uintDic = 5;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getUintDicMap() {
      return internalGetUintDic().getMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; uintDic = 5;</code>
     */

    public int getUintDicOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetUintDic().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, uint32&gt; uintDic = 5;</code>
     */

    public int getUintDicOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetUintDic().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearUintDic() {
      getMutableUintDic().clear();
      return this;
    }
    /**
     * <code>map&lt;string, uint32&gt; uintDic = 5;</code>
     */

    public Builder removeUintDic(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      getMutableUintDic().remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer>
    getMutableUintDic() {
      return internalGetMutableUintDic().getMutableMap();
    }
    /**
     * <code>map&lt;string, uint32&gt; uintDic = 5;</code>
     */
    public Builder putUintDic(
        java.lang.String key,
        int value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      
      getMutableUintDic().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, uint32&gt; uintDic = 5;</code>
     */

    public Builder putAllUintDic(
        java.util.Map<java.lang.String, java.lang.Integer> values) {
      getMutableUintDic().putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Long> uint64Dic_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
    internalGetUint64Dic() {
      if (uint64Dic_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Uint64DicDefaultEntryHolder.defaultEntry);
      }
      return uint64Dic_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Long>
    internalGetMutableUint64Dic() {
      onChanged();;
      if (uint64Dic_ == null) {
        uint64Dic_ = com.google.protobuf.MapField.newMapField(
            Uint64DicDefaultEntryHolder.defaultEntry);
      }
      if (!uint64Dic_.isMutable()) {
        uint64Dic_ = uint64Dic_.copy();
      }
      return uint64Dic_;
    }

    public int getUint64DicCount() {
      return internalGetUint64Dic().getMap().size();
    }
    /**
     * <code>map&lt;string, uint64&gt; uint64Dic = 6;</code>
     */

    public boolean containsUint64Dic(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetUint64Dic().getMap().containsKey(key);
    }
    /**
     * Use {@link #getUint64DicMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Long> getUint64Dic() {
      return getUint64DicMap();
    }
    /**
     * <code>map&lt;string, uint64&gt; uint64Dic = 6;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Long> getUint64DicMap() {
      return internalGetUint64Dic().getMap();
    }
    /**
     * <code>map&lt;string, uint64&gt; uint64Dic = 6;</code>
     */

    public long getUint64DicOrDefault(
        java.lang.String key,
        long defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Long> map =
          internalGetUint64Dic().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, uint64&gt; uint64Dic = 6;</code>
     */

    public long getUint64DicOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Long> map =
          internalGetUint64Dic().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearUint64Dic() {
      getMutableUint64Dic().clear();
      return this;
    }
    /**
     * <code>map&lt;string, uint64&gt; uint64Dic = 6;</code>
     */

    public Builder removeUint64Dic(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      getMutableUint64Dic().remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Long>
    getMutableUint64Dic() {
      return internalGetMutableUint64Dic().getMutableMap();
    }
    /**
     * <code>map&lt;string, uint64&gt; uint64Dic = 6;</code>
     */
    public Builder putUint64Dic(
        java.lang.String key,
        long value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      
      getMutableUint64Dic().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, uint64&gt; uint64Dic = 6;</code>
     */

    public Builder putAllUint64Dic(
        java.util.Map<java.lang.String, java.lang.Long> values) {
      getMutableUint64Dic().putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Double> doubleDic_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
    internalGetDoubleDic() {
      if (doubleDic_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DoubleDicDefaultEntryHolder.defaultEntry);
      }
      return doubleDic_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
    internalGetMutableDoubleDic() {
      onChanged();;
      if (doubleDic_ == null) {
        doubleDic_ = com.google.protobuf.MapField.newMapField(
            DoubleDicDefaultEntryHolder.defaultEntry);
      }
      if (!doubleDic_.isMutable()) {
        doubleDic_ = doubleDic_.copy();
      }
      return doubleDic_;
    }

    public int getDoubleDicCount() {
      return internalGetDoubleDic().getMap().size();
    }
    /**
     * <code>map&lt;string, double&gt; doubleDic = 7;</code>
     */

    public boolean containsDoubleDic(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetDoubleDic().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDoubleDicMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double> getDoubleDic() {
      return getDoubleDicMap();
    }
    /**
     * <code>map&lt;string, double&gt; doubleDic = 7;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Double> getDoubleDicMap() {
      return internalGetDoubleDic().getMap();
    }
    /**
     * <code>map&lt;string, double&gt; doubleDic = 7;</code>
     */

    public double getDoubleDicOrDefault(
        java.lang.String key,
        double defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetDoubleDic().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, double&gt; doubleDic = 7;</code>
     */

    public double getDoubleDicOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetDoubleDic().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearDoubleDic() {
      getMutableDoubleDic().clear();
      return this;
    }
    /**
     * <code>map&lt;string, double&gt; doubleDic = 7;</code>
     */

    public Builder removeDoubleDic(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      getMutableDoubleDic().remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double>
    getMutableDoubleDic() {
      return internalGetMutableDoubleDic().getMutableMap();
    }
    /**
     * <code>map&lt;string, double&gt; doubleDic = 7;</code>
     */
    public Builder putDoubleDic(
        java.lang.String key,
        double value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      
      getMutableDoubleDic().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, double&gt; doubleDic = 7;</code>
     */

    public Builder putAllDoubleDic(
        java.util.Map<java.lang.String, java.lang.Double> values) {
      getMutableDoubleDic().putAll(values);
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Protocols.PlayerAttrClientNtf)
  }

  // @@protoc_insertion_point(class_scope:Protocols.PlayerAttrClientNtf)
  private static final com.dj.protobuf.login.PlayerAttrClientNtf DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.dj.protobuf.login.PlayerAttrClientNtf();
  }

  public static com.dj.protobuf.login.PlayerAttrClientNtf getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<PlayerAttrClientNtf>
      PARSER = new com.google.protobuf.AbstractParser<PlayerAttrClientNtf>() {
    public PlayerAttrClientNtf parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerAttrClientNtf(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PlayerAttrClientNtf> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PlayerAttrClientNtf> getParserForType() {
    return PARSER;
  }

  public com.dj.protobuf.login.PlayerAttrClientNtf getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

