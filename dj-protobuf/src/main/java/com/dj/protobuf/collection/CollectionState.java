// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Collection.proto

package com.dj.protobuf.collection;

/**
 * <pre>
 *&#47; &lt;summary&gt;
 * / 收集状态
 * / &lt;/summary&gt;
 * </pre>
 *
 * Protobuf enum {@code Protocols.CollectionState}
 */
public enum CollectionState
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 未集齐，灰色
   * </pre>
   *
   * <code>Gray = 0;</code>
   */
  Gray(0),
  /**
   * <pre>
   * 集齐
   * </pre>
   *
   * <code>Gather_All = 1;</code>
   */
  Gather_All(1),
  /**
   * <pre>
   * 发光
   * </pre>
   *
   * <code>Shine = 2;</code>
   */
  Shine(2),
  ;

  /**
   * <pre>
   * 未集齐，灰色
   * </pre>
   *
   * <code>Gray = 0;</code>
   */
  public static final int Gray_VALUE = 0;
  /**
   * <pre>
   * 集齐
   * </pre>
   *
   * <code>Gather_All = 1;</code>
   */
  public static final int Gather_All_VALUE = 1;
  /**
   * <pre>
   * 发光
   * </pre>
   *
   * <code>Shine = 2;</code>
   */
  public static final int Shine_VALUE = 2;


  public final int getNumber() {
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static CollectionState valueOf(int value) {
    return forNumber(value);
  }

  public static CollectionState forNumber(int value) {
    switch (value) {
      case 0: return Gray;
      case 1: return Gather_All;
      case 2: return Shine;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<CollectionState>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      CollectionState> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<CollectionState>() {
          public CollectionState findValueByNumber(int number) {
            return CollectionState.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.dj.protobuf.collection.Collection.getDescriptor()
        .getEnumTypes().get(0);
  }

  private static final CollectionState[] VALUES = values();

  public static CollectionState valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private CollectionState(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Protocols.CollectionState)
}

