// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Friend.proto

package com.dj.protobuf.friend;

/**
 * Protobuf enum {@code Protocols.EFriendApplyType}
 */
public enum EFriendApplyType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 正常请求加好友
   * </pre>
   *
   * <code>FAT_Normal = 1;</code>
   */
  FAT_Normal(1),
  /**
   * <pre>
   * 场景派对中请求加好友
   * </pre>
   *
   * <code>FAT_Scene = 2;</code>
   */
  FAT_Scene(2),
  ;

  /**
   * <pre>
   * 正常请求加好友
   * </pre>
   *
   * <code>FAT_Normal = 1;</code>
   */
  public static final int FAT_Normal_VALUE = 1;
  /**
   * <pre>
   * 场景派对中请求加好友
   * </pre>
   *
   * <code>FAT_Scene = 2;</code>
   */
  public static final int FAT_Scene_VALUE = 2;


  public final int getNumber() {
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static EFriendApplyType valueOf(int value) {
    return forNumber(value);
  }

  public static EFriendApplyType forNumber(int value) {
    switch (value) {
      case 1: return FAT_Normal;
      case 2: return FAT_Scene;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<EFriendApplyType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      EFriendApplyType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<EFriendApplyType>() {
          public EFriendApplyType findValueByNumber(int number) {
            return EFriendApplyType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.dj.protobuf.friend.Friend.getDescriptor()
        .getEnumTypes().get(1);
  }

  private static final EFriendApplyType[] VALUES = values();

  public static EFriendApplyType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private EFriendApplyType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Protocols.EFriendApplyType)
}

