// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Park.proto

package com.dj.protobuf.park;

/**
 * Protobuf enum {@code Protocols.ParkStatus}
 */
public enum ParkStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   *&#47;饥饿
   * </pre>
   *
   * <code>Hunger = -1;</code>
   */
  Hunger(-1),
  /**
   * <pre>
   *&#47;正常
   * </pre>
   *
   * <code>Normal = 0;</code>
   */
  Normal(0),
  /**
   * <pre>
   *&#47;枯萎
   * </pre>
   *
   * <code>Wither = 1;</code>
   */
  Wither(1),
  ;

  /**
   * <pre>
   *&#47;饥饿
   * </pre>
   *
   * <code>Hunger = -1;</code>
   */
  public static final int Hunger_VALUE = -1;
  /**
   * <pre>
   *&#47;正常
   * </pre>
   *
   * <code>Normal = 0;</code>
   */
  public static final int Normal_VALUE = 0;
  /**
   * <pre>
   *&#47;枯萎
   * </pre>
   *
   * <code>Wither = 1;</code>
   */
  public static final int Wither_VALUE = 1;


  public final int getNumber() {
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ParkStatus valueOf(int value) {
    return forNumber(value);
  }

  public static ParkStatus forNumber(int value) {
    switch (value) {
      case -1: return Hunger;
      case 0: return Normal;
      case 1: return Wither;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ParkStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ParkStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ParkStatus>() {
          public ParkStatus findValueByNumber(int number) {
            return ParkStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.dj.protobuf.park.Park.getDescriptor()
        .getEnumTypes().get(0);
  }

  private static final ParkStatus[] VALUES = values();

  public static ParkStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ParkStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Protocols.ParkStatus)
}

