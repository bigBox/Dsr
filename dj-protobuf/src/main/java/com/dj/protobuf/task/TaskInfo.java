// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Task.proto

package com.dj.protobuf.task;

/**
 * Protobuf type {@code Protocols.TaskInfo}
 */
public  final class TaskInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Protocols.TaskInfo)
    TaskInfoOrBuilder {
  // Use TaskInfo.newBuilder() to construct.
  private TaskInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TaskInfo() {
    id_ = 0L;
    index_ = 0;
    taskId_ = 0;
    type_ = 1;
    actionType_ = 0;
    actionTime_ = 0;
    actionType1_ = 0;
    actionTime1_ = 0;
    state_ = 0;
    first_ = 0;
    cd_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TaskInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            id_ = input.readInt64();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            index_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            taskId_ = input.readInt32();
            break;
          }
          case 32: {
            int rawValue = input.readEnum();
            com.dj.protobuf.task.ETaskType value = com.dj.protobuf.task.ETaskType.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(4, rawValue);
            } else {
              bitField0_ |= 0x00000008;
              type_ = rawValue;
            }
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            actionType_ = input.readInt32();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            actionTime_ = input.readInt32();
            break;
          }
          case 56: {
            bitField0_ |= 0x00000040;
            actionType1_ = input.readInt32();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000080;
            actionTime1_ = input.readInt32();
            break;
          }
          case 74: {
            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
              curItem_ = com.google.protobuf.MapField.newMapField(
                  CurItemDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000100;
            }
            com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
            curItem = input.readMessage(
                CurItemDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            curItem_.getMutableMap().put(curItem.getKey(), curItem.getValue());
            break;
          }
          case 80: {
            bitField0_ |= 0x00000100;
            state_ = input.readInt32();
            break;
          }
          case 88: {
            bitField0_ |= 0x00000200;
            first_ = input.readInt32();
            break;
          }
          case 96: {
            bitField0_ |= 0x00000400;
            cd_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.dj.protobuf.task.Task.internal_static_Protocols_TaskInfo_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 9:
        return internalGetCurItem();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.dj.protobuf.task.Task.internal_static_Protocols_TaskInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.dj.protobuf.task.TaskInfo.class, com.dj.protobuf.task.TaskInfo.Builder.class);
  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private long id_;
  /**
   * <pre>
   * 任务表id
   * </pre>
   *
   * <code>optional int64 id = 1;</code>
   */
  public boolean hasId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * 任务表id
   * </pre>
   *
   * <code>optional int64 id = 1;</code>
   */
  public long getId() {
    return id_;
  }

  public static final int INDEX_FIELD_NUMBER = 2;
  private int index_;
  /**
   * <pre>
   * 任务索引
   * </pre>
   *
   * <code>optional int32 index = 2;</code>
   */
  public boolean hasIndex() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * 任务索引
   * </pre>
   *
   * <code>optional int32 index = 2;</code>
   */
  public int getIndex() {
    return index_;
  }

  public static final int TASKID_FIELD_NUMBER = 3;
  private int taskId_;
  /**
   * <pre>
   * 任务id
   * </pre>
   *
   * <code>optional int32 taskId = 3;</code>
   */
  public boolean hasTaskId() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * 任务id
   * </pre>
   *
   * <code>optional int32 taskId = 3;</code>
   */
  public int getTaskId() {
    return taskId_;
  }

  public static final int TYPE_FIELD_NUMBER = 4;
  private int type_;
  /**
   * <pre>
   * 任务类型
   * </pre>
   *
   * <code>optional .Protocols.ETaskType type = 4;</code>
   */
  public boolean hasType() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * 任务类型
   * </pre>
   *
   * <code>optional .Protocols.ETaskType type = 4;</code>
   */
  public com.dj.protobuf.task.ETaskType getType() {
    com.dj.protobuf.task.ETaskType result = com.dj.protobuf.task.ETaskType.valueOf(type_);
    return result == null ? com.dj.protobuf.task.ETaskType.GrowUp : result;
  }

  public static final int ACTIONTYPE_FIELD_NUMBER = 5;
  private int actionType_;
  /**
   * <pre>
   * 任务行为类型
   * </pre>
   *
   * <code>optional int32 actionType = 5;</code>
   */
  public boolean hasActionType() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * 任务行为类型
   * </pre>
   *
   * <code>optional int32 actionType = 5;</code>
   */
  public int getActionType() {
    return actionType_;
  }

  public static final int ACTIONTIME_FIELD_NUMBER = 6;
  private int actionTime_;
  /**
   * <pre>
   * 完成的行为的次数
   * </pre>
   *
   * <code>optional int32 actionTime = 6;</code>
   */
  public boolean hasActionTime() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * 完成的行为的次数
   * </pre>
   *
   * <code>optional int32 actionTime = 6;</code>
   */
  public int getActionTime() {
    return actionTime_;
  }

  public static final int ACTIONTYPE1_FIELD_NUMBER = 7;
  private int actionType1_;
  /**
   * <pre>
   * 任务行为类型
   * </pre>
   *
   * <code>optional int32 actionType1 = 7;</code>
   */
  public boolean hasActionType1() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <pre>
   * 任务行为类型
   * </pre>
   *
   * <code>optional int32 actionType1 = 7;</code>
   */
  public int getActionType1() {
    return actionType1_;
  }

  public static final int ACTIONTIME1_FIELD_NUMBER = 8;
  private int actionTime1_;
  /**
   * <pre>
   * 完成的行为的次数
   * </pre>
   *
   * <code>optional int32 actionTime1 = 8;</code>
   */
  public boolean hasActionTime1() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <pre>
   * 完成的行为的次数
   * </pre>
   *
   * <code>optional int32 actionTime1 = 8;</code>
   */
  public int getActionTime1() {
    return actionTime1_;
  }

  public static final int CURITEM_FIELD_NUMBER = 9;
  private static final class CurItemDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Integer, java.lang.Integer> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                com.dj.protobuf.task.Task.internal_static_Protocols_TaskInfo_CurItemEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.INT32,
                0);
  }
  private com.google.protobuf.MapField<
      java.lang.Integer, java.lang.Integer> curItem_;
  private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
  internalGetCurItem() {
    if (curItem_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          CurItemDefaultEntryHolder.defaultEntry);
    }
    return curItem_;
  }

  public int getCurItemCount() {
    return internalGetCurItem().getMap().size();
  }
  /**
   * <pre>
   * 已经找到的物品
   * </pre>
   *
   * <code>map&lt;int32, int32&gt; curItem = 9;</code>
   */

  public boolean containsCurItem(
      int key) {
    
    return internalGetCurItem().getMap().containsKey(key);
  }
  /**
   * Use {@link #getCurItemMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, java.lang.Integer> getCurItem() {
    return getCurItemMap();
  }
  /**
   * <pre>
   * 已经找到的物品
   * </pre>
   *
   * <code>map&lt;int32, int32&gt; curItem = 9;</code>
   */

  public java.util.Map<java.lang.Integer, java.lang.Integer> getCurItemMap() {
    return internalGetCurItem().getMap();
  }
  /**
   * <pre>
   * 已经找到的物品
   * </pre>
   *
   * <code>map&lt;int32, int32&gt; curItem = 9;</code>
   */

  public int getCurItemOrDefault(
      int key,
      int defaultValue) {
    
    java.util.Map<java.lang.Integer, java.lang.Integer> map =
        internalGetCurItem().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * 已经找到的物品
   * </pre>
   *
   * <code>map&lt;int32, int32&gt; curItem = 9;</code>
   */

  public int getCurItemOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, java.lang.Integer> map =
        internalGetCurItem().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int STATE_FIELD_NUMBER = 10;
  private int state_;
  /**
   * <pre>
   *状态， 0未接受，1已接受 2 已完成 3已领取
   * </pre>
   *
   * <code>optional int32 state = 10;</code>
   */
  public boolean hasState() {
    return ((bitField0_ & 0x00000100) == 0x00000100);
  }
  /**
   * <pre>
   *状态， 0未接受，1已接受 2 已完成 3已领取
   * </pre>
   *
   * <code>optional int32 state = 10;</code>
   */
  public int getState() {
    return state_;
  }

  public static final int FIRST_FIELD_NUMBER = 11;
  private int first_;
  /**
   * <pre>
   *首次状态 0首次，1首次用完
   * </pre>
   *
   * <code>optional int32 first = 11;</code>
   */
  public boolean hasFirst() {
    return ((bitField0_ & 0x00000200) == 0x00000200);
  }
  /**
   * <pre>
   *首次状态 0首次，1首次用完
   * </pre>
   *
   * <code>optional int32 first = 11;</code>
   */
  public int getFirst() {
    return first_;
  }

  public static final int CD_FIELD_NUMBER = 12;
  private int cd_;
  /**
   * <pre>
   *商会任务撕单后的cd 时间
   * </pre>
   *
   * <code>optional int32 cd = 12;</code>
   */
  public boolean hasCd() {
    return ((bitField0_ & 0x00000400) == 0x00000400);
  }
  /**
   * <pre>
   *商会任务撕单后的cd 时间
   * </pre>
   *
   * <code>optional int32 cd = 12;</code>
   */
  public int getCd() {
    return cd_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt64(1, id_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, index_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, taskId_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeEnum(4, type_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeInt32(5, actionType_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeInt32(6, actionTime_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeInt32(7, actionType1_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeInt32(8, actionTime1_);
    }
    for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
         : internalGetCurItem().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
      curItem = CurItemDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      output.writeMessage(9, curItem);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      output.writeInt32(10, state_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      output.writeInt32(11, first_);
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      output.writeInt32(12, cd_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, id_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, index_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, taskId_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, type_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, actionType_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, actionTime_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, actionType1_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, actionTime1_);
    }
    for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
         : internalGetCurItem().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
      curItem = CurItemDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, curItem);
    }
    if (((bitField0_ & 0x00000100) == 0x00000100)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, state_);
    }
    if (((bitField0_ & 0x00000200) == 0x00000200)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, first_);
    }
    if (((bitField0_ & 0x00000400) == 0x00000400)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, cd_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.dj.protobuf.task.TaskInfo)) {
      return super.equals(obj);
    }
    com.dj.protobuf.task.TaskInfo other = (com.dj.protobuf.task.TaskInfo) obj;

    boolean result = true;
    result = result && (hasId() == other.hasId());
    if (hasId()) {
      result = result && (getId()
          == other.getId());
    }
    result = result && (hasIndex() == other.hasIndex());
    if (hasIndex()) {
      result = result && (getIndex()
          == other.getIndex());
    }
    result = result && (hasTaskId() == other.hasTaskId());
    if (hasTaskId()) {
      result = result && (getTaskId()
          == other.getTaskId());
    }
    result = result && (hasType() == other.hasType());
    if (hasType()) {
      result = result && type_ == other.type_;
    }
    result = result && (hasActionType() == other.hasActionType());
    if (hasActionType()) {
      result = result && (getActionType()
          == other.getActionType());
    }
    result = result && (hasActionTime() == other.hasActionTime());
    if (hasActionTime()) {
      result = result && (getActionTime()
          == other.getActionTime());
    }
    result = result && (hasActionType1() == other.hasActionType1());
    if (hasActionType1()) {
      result = result && (getActionType1()
          == other.getActionType1());
    }
    result = result && (hasActionTime1() == other.hasActionTime1());
    if (hasActionTime1()) {
      result = result && (getActionTime1()
          == other.getActionTime1());
    }
    result = result && internalGetCurItem().equals(
        other.internalGetCurItem());
    result = result && (hasState() == other.hasState());
    if (hasState()) {
      result = result && (getState()
          == other.getState());
    }
    result = result && (hasFirst() == other.hasFirst());
    if (hasFirst()) {
      result = result && (getFirst()
          == other.getFirst());
    }
    result = result && (hasCd() == other.hasCd());
    if (hasCd()) {
      result = result && (getCd()
          == other.getCd());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasId()) {
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getId());
    }
    if (hasIndex()) {
      hash = (37 * hash) + INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getIndex();
    }
    if (hasTaskId()) {
      hash = (37 * hash) + TASKID_FIELD_NUMBER;
      hash = (53 * hash) + getTaskId();
    }
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
    }
    if (hasActionType()) {
      hash = (37 * hash) + ACTIONTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getActionType();
    }
    if (hasActionTime()) {
      hash = (37 * hash) + ACTIONTIME_FIELD_NUMBER;
      hash = (53 * hash) + getActionTime();
    }
    if (hasActionType1()) {
      hash = (37 * hash) + ACTIONTYPE1_FIELD_NUMBER;
      hash = (53 * hash) + getActionType1();
    }
    if (hasActionTime1()) {
      hash = (37 * hash) + ACTIONTIME1_FIELD_NUMBER;
      hash = (53 * hash) + getActionTime1();
    }
    if (!internalGetCurItem().getMap().isEmpty()) {
      hash = (37 * hash) + CURITEM_FIELD_NUMBER;
      hash = (53 * hash) + internalGetCurItem().hashCode();
    }
    if (hasState()) {
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + getState();
    }
    if (hasFirst()) {
      hash = (37 * hash) + FIRST_FIELD_NUMBER;
      hash = (53 * hash) + getFirst();
    }
    if (hasCd()) {
      hash = (37 * hash) + CD_FIELD_NUMBER;
      hash = (53 * hash) + getCd();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.dj.protobuf.task.TaskInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dj.protobuf.task.TaskInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dj.protobuf.task.TaskInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.dj.protobuf.task.TaskInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.dj.protobuf.task.TaskInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dj.protobuf.task.TaskInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dj.protobuf.task.TaskInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.dj.protobuf.task.TaskInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.dj.protobuf.task.TaskInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.dj.protobuf.task.TaskInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.dj.protobuf.task.TaskInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Protocols.TaskInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Protocols.TaskInfo)
      com.dj.protobuf.task.TaskInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.dj.protobuf.task.Task.internal_static_Protocols_TaskInfo_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 9:
          return internalGetCurItem();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 9:
          return internalGetMutableCurItem();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.dj.protobuf.task.Task.internal_static_Protocols_TaskInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.dj.protobuf.task.TaskInfo.class, com.dj.protobuf.task.TaskInfo.Builder.class);
    }

    // Construct using com.dj.protobuf.task.TaskInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      id_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      index_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      taskId_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      type_ = 1;
      bitField0_ = (bitField0_ & ~0x00000008);
      actionType_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      actionTime_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      actionType1_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      actionTime1_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      internalGetMutableCurItem().clear();
      state_ = 0;
      bitField0_ = (bitField0_ & ~0x00000200);
      first_ = 0;
      bitField0_ = (bitField0_ & ~0x00000400);
      cd_ = 0;
      bitField0_ = (bitField0_ & ~0x00000800);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.dj.protobuf.task.Task.internal_static_Protocols_TaskInfo_descriptor;
    }

    public com.dj.protobuf.task.TaskInfo getDefaultInstanceForType() {
      return com.dj.protobuf.task.TaskInfo.getDefaultInstance();
    }

    public com.dj.protobuf.task.TaskInfo build() {
      com.dj.protobuf.task.TaskInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.dj.protobuf.task.TaskInfo buildPartial() {
      com.dj.protobuf.task.TaskInfo result = new com.dj.protobuf.task.TaskInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.id_ = id_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.index_ = index_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.taskId_ = taskId_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.type_ = type_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.actionType_ = actionType_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.actionTime_ = actionTime_;
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000040;
      }
      result.actionType1_ = actionType1_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000080;
      }
      result.actionTime1_ = actionTime1_;
      result.curItem_ = internalGetCurItem();
      result.curItem_.makeImmutable();
      if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
        to_bitField0_ |= 0x00000100;
      }
      result.state_ = state_;
      if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
        to_bitField0_ |= 0x00000200;
      }
      result.first_ = first_;
      if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
        to_bitField0_ |= 0x00000400;
      }
      result.cd_ = cd_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.dj.protobuf.task.TaskInfo) {
        return mergeFrom((com.dj.protobuf.task.TaskInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.dj.protobuf.task.TaskInfo other) {
      if (other == com.dj.protobuf.task.TaskInfo.getDefaultInstance()) return this;
      if (other.hasId()) {
        setId(other.getId());
      }
      if (other.hasIndex()) {
        setIndex(other.getIndex());
      }
      if (other.hasTaskId()) {
        setTaskId(other.getTaskId());
      }
      if (other.hasType()) {
        setType(other.getType());
      }
      if (other.hasActionType()) {
        setActionType(other.getActionType());
      }
      if (other.hasActionTime()) {
        setActionTime(other.getActionTime());
      }
      if (other.hasActionType1()) {
        setActionType1(other.getActionType1());
      }
      if (other.hasActionTime1()) {
        setActionTime1(other.getActionTime1());
      }
      internalGetMutableCurItem().mergeFrom(
          other.internalGetCurItem());
      if (other.hasState()) {
        setState(other.getState());
      }
      if (other.hasFirst()) {
        setFirst(other.getFirst());
      }
      if (other.hasCd()) {
        setCd(other.getCd());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.dj.protobuf.task.TaskInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.dj.protobuf.task.TaskInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long id_ ;
    /**
     * <pre>
     * 任务表id
     * </pre>
     *
     * <code>optional int64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 任务表id
     * </pre>
     *
     * <code>optional int64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }
    /**
     * <pre>
     * 任务表id
     * </pre>
     *
     * <code>optional int64 id = 1;</code>
     */
    public Builder setId(long value) {
      bitField0_ |= 0x00000001;
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 任务表id
     * </pre>
     *
     * <code>optional int64 id = 1;</code>
     */
    public Builder clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = 0L;
      onChanged();
      return this;
    }

    private int index_ ;
    /**
     * <pre>
     * 任务索引
     * </pre>
     *
     * <code>optional int32 index = 2;</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 任务索引
     * </pre>
     *
     * <code>optional int32 index = 2;</code>
     */
    public int getIndex() {
      return index_;
    }
    /**
     * <pre>
     * 任务索引
     * </pre>
     *
     * <code>optional int32 index = 2;</code>
     */
    public Builder setIndex(int value) {
      bitField0_ |= 0x00000002;
      index_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 任务索引
     * </pre>
     *
     * <code>optional int32 index = 2;</code>
     */
    public Builder clearIndex() {
      bitField0_ = (bitField0_ & ~0x00000002);
      index_ = 0;
      onChanged();
      return this;
    }

    private int taskId_ ;
    /**
     * <pre>
     * 任务id
     * </pre>
     *
     * <code>optional int32 taskId = 3;</code>
     */
    public boolean hasTaskId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * 任务id
     * </pre>
     *
     * <code>optional int32 taskId = 3;</code>
     */
    public int getTaskId() {
      return taskId_;
    }
    /**
     * <pre>
     * 任务id
     * </pre>
     *
     * <code>optional int32 taskId = 3;</code>
     */
    public Builder setTaskId(int value) {
      bitField0_ |= 0x00000004;
      taskId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 任务id
     * </pre>
     *
     * <code>optional int32 taskId = 3;</code>
     */
    public Builder clearTaskId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      taskId_ = 0;
      onChanged();
      return this;
    }

    private int type_ = 1;
    /**
     * <pre>
     * 任务类型
     * </pre>
     *
     * <code>optional .Protocols.ETaskType type = 4;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * 任务类型
     * </pre>
     *
     * <code>optional .Protocols.ETaskType type = 4;</code>
     */
    public com.dj.protobuf.task.ETaskType getType() {
      com.dj.protobuf.task.ETaskType result = com.dj.protobuf.task.ETaskType.valueOf(type_);
      return result == null ? com.dj.protobuf.task.ETaskType.GrowUp : result;
    }
    /**
     * <pre>
     * 任务类型
     * </pre>
     *
     * <code>optional .Protocols.ETaskType type = 4;</code>
     */
    public Builder setType(com.dj.protobuf.task.ETaskType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 任务类型
     * </pre>
     *
     * <code>optional .Protocols.ETaskType type = 4;</code>
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000008);
      type_ = 1;
      onChanged();
      return this;
    }

    private int actionType_ ;
    /**
     * <pre>
     * 任务行为类型
     * </pre>
     *
     * <code>optional int32 actionType = 5;</code>
     */
    public boolean hasActionType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * 任务行为类型
     * </pre>
     *
     * <code>optional int32 actionType = 5;</code>
     */
    public int getActionType() {
      return actionType_;
    }
    /**
     * <pre>
     * 任务行为类型
     * </pre>
     *
     * <code>optional int32 actionType = 5;</code>
     */
    public Builder setActionType(int value) {
      bitField0_ |= 0x00000010;
      actionType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 任务行为类型
     * </pre>
     *
     * <code>optional int32 actionType = 5;</code>
     */
    public Builder clearActionType() {
      bitField0_ = (bitField0_ & ~0x00000010);
      actionType_ = 0;
      onChanged();
      return this;
    }

    private int actionTime_ ;
    /**
     * <pre>
     * 完成的行为的次数
     * </pre>
     *
     * <code>optional int32 actionTime = 6;</code>
     */
    public boolean hasActionTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * 完成的行为的次数
     * </pre>
     *
     * <code>optional int32 actionTime = 6;</code>
     */
    public int getActionTime() {
      return actionTime_;
    }
    /**
     * <pre>
     * 完成的行为的次数
     * </pre>
     *
     * <code>optional int32 actionTime = 6;</code>
     */
    public Builder setActionTime(int value) {
      bitField0_ |= 0x00000020;
      actionTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 完成的行为的次数
     * </pre>
     *
     * <code>optional int32 actionTime = 6;</code>
     */
    public Builder clearActionTime() {
      bitField0_ = (bitField0_ & ~0x00000020);
      actionTime_ = 0;
      onChanged();
      return this;
    }

    private int actionType1_ ;
    /**
     * <pre>
     * 任务行为类型
     * </pre>
     *
     * <code>optional int32 actionType1 = 7;</code>
     */
    public boolean hasActionType1() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * 任务行为类型
     * </pre>
     *
     * <code>optional int32 actionType1 = 7;</code>
     */
    public int getActionType1() {
      return actionType1_;
    }
    /**
     * <pre>
     * 任务行为类型
     * </pre>
     *
     * <code>optional int32 actionType1 = 7;</code>
     */
    public Builder setActionType1(int value) {
      bitField0_ |= 0x00000040;
      actionType1_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 任务行为类型
     * </pre>
     *
     * <code>optional int32 actionType1 = 7;</code>
     */
    public Builder clearActionType1() {
      bitField0_ = (bitField0_ & ~0x00000040);
      actionType1_ = 0;
      onChanged();
      return this;
    }

    private int actionTime1_ ;
    /**
     * <pre>
     * 完成的行为的次数
     * </pre>
     *
     * <code>optional int32 actionTime1 = 8;</code>
     */
    public boolean hasActionTime1() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * 完成的行为的次数
     * </pre>
     *
     * <code>optional int32 actionTime1 = 8;</code>
     */
    public int getActionTime1() {
      return actionTime1_;
    }
    /**
     * <pre>
     * 完成的行为的次数
     * </pre>
     *
     * <code>optional int32 actionTime1 = 8;</code>
     */
    public Builder setActionTime1(int value) {
      bitField0_ |= 0x00000080;
      actionTime1_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 完成的行为的次数
     * </pre>
     *
     * <code>optional int32 actionTime1 = 8;</code>
     */
    public Builder clearActionTime1() {
      bitField0_ = (bitField0_ & ~0x00000080);
      actionTime1_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> curItem_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetCurItem() {
      if (curItem_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            CurItemDefaultEntryHolder.defaultEntry);
      }
      return curItem_;
    }
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetMutableCurItem() {
      onChanged();;
      if (curItem_ == null) {
        curItem_ = com.google.protobuf.MapField.newMapField(
            CurItemDefaultEntryHolder.defaultEntry);
      }
      if (!curItem_.isMutable()) {
        curItem_ = curItem_.copy();
      }
      return curItem_;
    }

    public int getCurItemCount() {
      return internalGetCurItem().getMap().size();
    }
    /**
     * <pre>
     * 已经找到的物品
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; curItem = 9;</code>
     */

    public boolean containsCurItem(
        int key) {
      
      return internalGetCurItem().getMap().containsKey(key);
    }
    /**
     * Use {@link #getCurItemMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getCurItem() {
      return getCurItemMap();
    }
    /**
     * <pre>
     * 已经找到的物品
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; curItem = 9;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getCurItemMap() {
      return internalGetCurItem().getMap();
    }
    /**
     * <pre>
     * 已经找到的物品
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; curItem = 9;</code>
     */

    public int getCurItemOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetCurItem().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * 已经找到的物品
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; curItem = 9;</code>
     */

    public int getCurItemOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetCurItem().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearCurItem() {
      getMutableCurItem().clear();
      return this;
    }
    /**
     * <pre>
     * 已经找到的物品
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; curItem = 9;</code>
     */

    public Builder removeCurItem(
        int key) {
      
      getMutableCurItem().remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getMutableCurItem() {
      return internalGetMutableCurItem().getMutableMap();
    }
    /**
     * <pre>
     * 已经找到的物品
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; curItem = 9;</code>
     */
    public Builder putCurItem(
        int key,
        int value) {
      
      
      getMutableCurItem().put(key, value);
      return this;
    }
    /**
     * <pre>
     * 已经找到的物品
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; curItem = 9;</code>
     */

    public Builder putAllCurItem(
        java.util.Map<java.lang.Integer, java.lang.Integer> values) {
      getMutableCurItem().putAll(values);
      return this;
    }

    private int state_ ;
    /**
     * <pre>
     *状态， 0未接受，1已接受 2 已完成 3已领取
     * </pre>
     *
     * <code>optional int32 state = 10;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     *状态， 0未接受，1已接受 2 已完成 3已领取
     * </pre>
     *
     * <code>optional int32 state = 10;</code>
     */
    public int getState() {
      return state_;
    }
    /**
     * <pre>
     *状态， 0未接受，1已接受 2 已完成 3已领取
     * </pre>
     *
     * <code>optional int32 state = 10;</code>
     */
    public Builder setState(int value) {
      bitField0_ |= 0x00000200;
      state_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *状态， 0未接受，1已接受 2 已完成 3已领取
     * </pre>
     *
     * <code>optional int32 state = 10;</code>
     */
    public Builder clearState() {
      bitField0_ = (bitField0_ & ~0x00000200);
      state_ = 0;
      onChanged();
      return this;
    }

    private int first_ ;
    /**
     * <pre>
     *首次状态 0首次，1首次用完
     * </pre>
     *
     * <code>optional int32 first = 11;</code>
     */
    public boolean hasFirst() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     *首次状态 0首次，1首次用完
     * </pre>
     *
     * <code>optional int32 first = 11;</code>
     */
    public int getFirst() {
      return first_;
    }
    /**
     * <pre>
     *首次状态 0首次，1首次用完
     * </pre>
     *
     * <code>optional int32 first = 11;</code>
     */
    public Builder setFirst(int value) {
      bitField0_ |= 0x00000400;
      first_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *首次状态 0首次，1首次用完
     * </pre>
     *
     * <code>optional int32 first = 11;</code>
     */
    public Builder clearFirst() {
      bitField0_ = (bitField0_ & ~0x00000400);
      first_ = 0;
      onChanged();
      return this;
    }

    private int cd_ ;
    /**
     * <pre>
     *商会任务撕单后的cd 时间
     * </pre>
     *
     * <code>optional int32 cd = 12;</code>
     */
    public boolean hasCd() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     *商会任务撕单后的cd 时间
     * </pre>
     *
     * <code>optional int32 cd = 12;</code>
     */
    public int getCd() {
      return cd_;
    }
    /**
     * <pre>
     *商会任务撕单后的cd 时间
     * </pre>
     *
     * <code>optional int32 cd = 12;</code>
     */
    public Builder setCd(int value) {
      bitField0_ |= 0x00000800;
      cd_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *商会任务撕单后的cd 时间
     * </pre>
     *
     * <code>optional int32 cd = 12;</code>
     */
    public Builder clearCd() {
      bitField0_ = (bitField0_ & ~0x00000800);
      cd_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Protocols.TaskInfo)
  }

  // @@protoc_insertion_point(class_scope:Protocols.TaskInfo)
  private static final com.dj.protobuf.task.TaskInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.dj.protobuf.task.TaskInfo();
  }

  public static com.dj.protobuf.task.TaskInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<TaskInfo>
      PARSER = new com.google.protobuf.AbstractParser<TaskInfo>() {
    public TaskInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new TaskInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TaskInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TaskInfo> getParserForType() {
    return PARSER;
  }

  public com.dj.protobuf.task.TaskInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

