// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Task.proto

package com.dj.protobuf.task;

/**
 * Protobuf enum {@code Protocols.ETaskType}
 */
public enum ETaskType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 成长任务
   * </pre>
   *
   * <code>GrowUp = 1;</code>
   */
  GrowUp(1),
  /**
   * <pre>
   * 每日任务
   * </pre>
   *
   * <code>Day = 2;</code>
   */
  Day(2),
  /**
   * <pre>
   * 月度任务
   * </pre>
   *
   * <code>Month = 3;</code>
   */
  Month(3),
  /**
   * <pre>
   * 特殊任务
   * </pre>
   *
   * <code>Special = 4;</code>
   */
  Special(4),
  /**
   * <pre>
   * 商会任务
   * </pre>
   *
   * <code>Guild = 5;</code>
   */
  Guild(5),
  ;

  /**
   * <pre>
   * 成长任务
   * </pre>
   *
   * <code>GrowUp = 1;</code>
   */
  public static final int GrowUp_VALUE = 1;
  /**
   * <pre>
   * 每日任务
   * </pre>
   *
   * <code>Day = 2;</code>
   */
  public static final int Day_VALUE = 2;
  /**
   * <pre>
   * 月度任务
   * </pre>
   *
   * <code>Month = 3;</code>
   */
  public static final int Month_VALUE = 3;
  /**
   * <pre>
   * 特殊任务
   * </pre>
   *
   * <code>Special = 4;</code>
   */
  public static final int Special_VALUE = 4;
  /**
   * <pre>
   * 商会任务
   * </pre>
   *
   * <code>Guild = 5;</code>
   */
  public static final int Guild_VALUE = 5;


  public final int getNumber() {
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ETaskType valueOf(int value) {
    return forNumber(value);
  }

  public static ETaskType forNumber(int value) {
    switch (value) {
      case 1: return GrowUp;
      case 2: return Day;
      case 3: return Month;
      case 4: return Special;
      case 5: return Guild;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ETaskType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ETaskType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ETaskType>() {
          public ETaskType findValueByNumber(int number) {
            return ETaskType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.dj.protobuf.task.Task.getDescriptor()
        .getEnumTypes().get(0);
  }

  private static final ETaskType[] VALUES = values();

  public static ETaskType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ETaskType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:Protocols.ETaskType)
}

