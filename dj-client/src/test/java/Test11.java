import com.dj.domain.util.ThreadUtil;

public class Test11 {
    public static void main(String[] args) {

        new Thread(() -> {
            for (int i = 0; i < 100; i++) {
				ThreadUtil.sleep(10000);
                new Object();
            }
        }).start();
    }
}
/**
TCP-传输控制协议，具有极高的可靠性，保证数据包按照顺序准确到达，但其也有着很高的额外负担。
UDP-使用者数据元协议，并不能保证数据包会被成功的送达，也不保证到达的顺序，但其传输速度很快。
大多数我们会使用TCP，偶尔才会动用UDP，如声音讯号，即使少量遗失，也无关紧要。

简述线程的生命周期

新建的线程在它完整的生命周期中，包括新建、就绪、运行、阻塞和死亡5中状态。
1。新建（new）状态，用new命令建立一个线程后，还没有启动其指定的指令序列，这时
2。就绪（Runnable）状态，也叫做可运行状态，处于新建状态的线程被启动后即进入了本状态。这时线程正在等待分配
        CPU资源，一旦获得CPU资源即进入了自动运行状态。
3。运行（running）状态，线程获得了CPU资源正在线程的指令，此时除非它自动放弃CPU资源或者有更加高优先级的线程进入
        ，否则线程将一直运行到结束
4。阻塞（blocked）状态，由于某种原因致使正在运行的线程让出CPU资源暂停自己的执行，即进入阻塞状态，这时只有
        引起线程阻塞的原因被消除后才能使本线程回到就绪状态。
5。死亡（dead）状态，处于死亡状态的线程不具备继续运行的能力，死亡的原因有两个：一个是正常的线程完成了它的全部任务后退出，
另一种是线程被强制终止，如调用stop()或destroy()方法让线程小王。此时线程不可能再进入就绪状态等待执行。
 */